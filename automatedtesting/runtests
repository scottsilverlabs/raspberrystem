#!/usr/bin/env python3
from os import path, listdir
from sys import exit
from threading import Thread, Event

targetdir = path.abspath("./rsinstall/") #Path to the top level directory
targetfile = "test.auto" #What to look for in the folders
results = []

def test(fpath, contents, stop): #fpath in this case being the path to the testing file
	global results
	print("Testing "+fpath)
	pos = 0
	fail = False
	try:
		for i in range(len(contents)):
			if stop.isSet():
				return
			pos = i+1
			line = contents[i]
			split = line.split(" -> ") #Do we want to check for a return value?
			expected = None
			ret = None
			if len(split) > 1:
				expected = eval(split[1])
				ret = eval(split[0])
			else:
				exec(contents[i])
			if ret != expected:
				print("\tAt line "+str(pos)+" expected "+str(expected)+" got "+str(ret))
				fail = True
				break
			elif ret != None:
				print("\t"+str(ret)+" = "+str(expected))
	except Exception as e:
		print("\t"+fpath+" errored at line "+str(pos)+": "+str(e))
		results.append([fpath, "Errored"])
		return
	if not fail:
		print(fpath+":Passed")
		results.append([fpath, "Passed"])
	else:
		print(fpath+":Failed")
		results.append([fpath, "Failed"])

def checkDir(dpath):
	if path.isdir(dpath) and path.exists(dpath+"/"+targetfile):
		stop = Event()
		f = open(dpath+"/"+targetfile, "r")
		contents = f.readlines()
		f.close()
		timeout = 10
		if contents[0][0:10] == "TIMEOUT = ":
			timeout = eval(contents[0][10:])
			contents = contents[1:]
		thread = Thread(target = test, args = (dpath+"/"+targetfile, contents, stop))
		thread.setDaemon(True)
		thread.start()
		thread.join(timeout)
		if thread.isAlive():
			stop.set() #Not reliable if it's an infinite loop issue.
			print(dpath+"/"+targetfile+":Timeout")
			results.append([dpath+"/"+targetfile, "Timeout"])


for topdir in listdir(targetdir):
	checkDir(targetdir+"/"+topdir)
	for diractual in listdir(targetdir+"/"+topdir):
		checkDir(targetdir+"/"+topdir+"/"+diractual)
print("Results:")
for i in results:
	print("\t"+i[0]+":"+i[1])
exit(0) #To kill any infinite loop threads